)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
split_perc <- 0.6
asteroids_split <- split.data(asteroids_data, p = split_perc)
par(mfrow=c(1,2))
pie(table(asteroids_split$train$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$train$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Train set - Hazardous class"
)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
dim(asteroids_split$train)
dim(asteroids_split$test)
split_perc <- 0.7
split_perc <- 0.7
asteroids_split <- split.data(asteroids_data, p = split_perc)
par(mfrow=c(1,2))
pie(table(asteroids_split$train$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$train$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Train set - Hazardous class"
)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
dim(asteroids_split$train)
dim(asteroids_split$test)
setwd("~/Github/AsteroidsClassification")
#load dataset RObject as asteroids_data
load("asteroids_dataset.RData")
split.data = function(data, p = 0.7, s = 1){
set.seed(s)
index = sample(1:dim(data)[1])
train = data[index[1:floor(dim(data)[1] * p)], ]
test = data[index[((ceiling(dim(data)[1] * p)) + 1):dim(data)[1]], ]
return(list(train=train, test=test))
}
split_perc <- 0.7
asteroids_split <- split.data(asteroids_data, p = split_perc)
par(mfrow=c(1,2))
pie(table(asteroids_split$train$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$train$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Train set - Hazardous class"
)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
name_file <- paste("asteroids_dataset_split_", as.character(split_perc), ".RData", sep = "")
rm(asteroids_data,split.data,split_perc)
save(asteroids_split, file=name_file)
setwd("~/Github/AsteroidsClassification")
#load data
asteroids_data = read.csv("dataset/nasa.csv", header = TRUE)
#datatype change chars -> fact or int -> boolean
cat_cols <- c("Neo.Reference.ID", "Name", "Orbiting.Body", "Orbit.ID" , "Equinox")
log_cols <- c("Hazardous")
asteroids_data[cat_cols] <- lapply(asteroids_data[cat_cols], as.factor)
asteroids_data[log_cols] <- lapply(asteroids_data[log_cols], as.logical)
asteroids_data$Close.Approach.Date <- as.Date(asteroids_data$Close.Approach.Date, format =  "%Y-%m-%d")
asteroids_data$Orbit.Determination.Date <- as.Date(asteroids_data$Orbit.Determination.Date, format =  "%Y-%m-%d %H:%M:%S")
asteroids_datatype <- sapply(asteroids_data, class)
#remove object useless
rm(cat_cols,log_cols,asteroids_datatype)
save(asteroids_data, file="DATA_asteroids_dataset.RData")
rm(asteroids_data)
setwd("~/Github/AsteroidsClassification")
#load dataset RObject as asteroids_data
load("DATA_asteroids_dataset.RData")
split.data = function(data, p = 0.7, s = 1){
set.seed(s)
index = sample(1:dim(data)[1])
train = data[index[1:floor(dim(data)[1] * p)], ]
test = data[index[((ceiling(dim(data)[1] * p)) + 1):dim(data)[1]], ]
return(list(train=train, test=test))
}
split_perc <- 0.7
asteroids_split <- split.data(asteroids_data, p = split_perc)
img_name_plot <- paste("IMG_asteroids_dataset_splited_", as.character(split_perc), ".RData", sep = "")
jpeg(img_name_plot)
par(mfrow=c(1,2))
pie(table(asteroids_split$train$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$train$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Train set - Hazardous class"
)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
name_file <- paste("DATA_asteroids_dataset_split_", as.character(split_perc), ".RData", sep = "")
rm(asteroids_data,split.data,split_perc,img_name_plot)
save(asteroids_split, file=name_file)
rm(asteroids_split,name_file)
setwd("~/Github/AsteroidsClassification")
#load dataset RObject as asteroids_data
load("DATA_asteroids_dataset.RData")
split.data = function(data, p = 0.7, s = 1){
set.seed(s)
index = sample(1:dim(data)[1])
train = data[index[1:floor(dim(data)[1] * p)], ]
test = data[index[((ceiling(dim(data)[1] * p)) + 1):dim(data)[1]], ]
return(list(train=train, test=test))
}
split_perc <- 0.7
asteroids_split <- split.data(asteroids_data, p = split_perc)
img_name_plot <- paste("IMG_asteroids_dataset_splited_", as.character(split_perc), ".jpg", sep = "")
jpeg(img_name_plot)
par(mfrow=c(1,2))
pie(table(asteroids_split$train$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$train$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Train set - Hazardous class"
)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
name_file <- paste("DATA_asteroids_dataset_split_", as.character(split_perc), ".RData", sep = "")
rm(asteroids_data,split.data,split_perc,img_name_plot)
save(asteroids_split, file=name_file)
rm(asteroids_split,name_file)
setwd("~/Github/AsteroidsClassification")
library(png)
#load dataset RObject as asteroids_data
load("DATA_asteroids_dataset.RData")
split.data = function(data, p = 0.7, s = 1){
set.seed(s)
index = sample(1:dim(data)[1])
train = data[index[1:floor(dim(data)[1] * p)], ]
test = data[index[((ceiling(dim(data)[1] * p)) + 1):dim(data)[1]], ]
return(list(train=train, test=test))
}
split_perc <- 0.7
asteroids_split <- split.data(asteroids_data, p = split_perc)
img_name_plot <- paste("IMG_asteroids_dataset_splited_", as.character(split_perc), ".jpg", sep = "")
png(img_name_plot)
par(mfrow=c(1,2))
pie(table(asteroids_split$train$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$train$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Train set - Hazardous class"
)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
dev.off()
name_file <- paste("DATA_asteroids_dataset_split_", as.character(split_perc), ".RData", sep = "")
rm(asteroids_data,split.data,split_perc,img_name_plot)
save(asteroids_split, file=name_file)
rm(asteroids_split,name_file)
setwd("~/Github/AsteroidsClassification")
library(png)
#load dataset RObject as asteroids_data
load("DATA_asteroids_dataset.RData")
split.data = function(data, p = 0.7, s = 1){
set.seed(s)
index = sample(1:dim(data)[1])
train = data[index[1:floor(dim(data)[1] * p)], ]
test = data[index[((ceiling(dim(data)[1] * p)) + 1):dim(data)[1]], ]
return(list(train=train, test=test))
}
split_perc <- 0.7
asteroids_split <- split.data(asteroids_data, p = split_perc)
img_name_plot <- paste("IMG_asteroids_dataset_splited_", as.character(split_perc), ".png", sep = "")
png(img_name_plot)
par(mfrow=c(1,2))
pie(table(asteroids_split$train$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$train$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Train set - Hazardous class"
)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
dev.off()
name_file <- paste("DATA_asteroids_dataset_split_", as.character(split_perc), ".RData", sep = "")
rm(asteroids_data,split.data,split_perc,img_name_plot)
save(asteroids_split, file=name_file)
rm(asteroids_split,name_file)
setwd("~/Github/AsteroidsClassification")
#load dataset RObject as asteroids_data
load("DATA_asteroids_dataset.RData")
split.data = function(data, p = 0.7, s = 1){
set.seed(s)
index = sample(1:dim(data)[1])
train = data[index[1:floor(dim(data)[1] * p)], ]
test = data[index[((ceiling(dim(data)[1] * p)) + 1):dim(data)[1]], ]
return(list(train=train, test=test))
}
split_perc <- 0.7
asteroids_split <- split.data(asteroids_data, p = split_perc)
img_name_plot <- paste("IMG_asteroids_dataset_splited_", as.character(split_perc), ".png", sep = "")
png(img_name_plot)
par(mfrow=c(1,2))
pie(table(asteroids_split$train$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$train$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Train set - Hazardous class"
)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
dev.off()
name_file <- paste("DATA_asteroids_dataset_split_", as.character(split_perc), ".RData", sep = "")
rm(asteroids_data,split.data,split_perc,img_name_plot)
save(asteroids_split, file=name_file)
rm(asteroids_split,name_file)
library(rpart)
install(rpart)
install.packages(c("FactoMineR", "factoextra")) #PCA
install.packages(c("rpart")) #Decision trees
packages = c("rpart","FactoMineR", "factoextra")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
install.packages(c("FactoMineR", "factoextra")) #PCA
install.packages(c("rpart")) #Decision trees
install.packages(c("FactoMineR", "factoextra"))
install.packages(c("rpart"))
setwd("~/Github/AsteroidsClassification")
library(rpart)
#load dataset RObject as asteroids_data
load("DATA_asteroids_dataset.RData")
#load dataset RObject as asteroids_split
load("DATA_asteroids_dataset_split_0.7.RData")
decisionTree = rpart(Hazardous ~ ., data=asteroids_split$train, method="class")
install.packages(c("rpart","rattle","rpart.plot","RColorBrewer")) #Decision trees
install.packages(c("rpart", "rattle", "rpart.plot", "RColorBrewer"))
decisionTree = rpart(Hazardous ~ ., data=asteroids_split$train, method="class") #. all var
img_name_plot <- paste("IMG_asteroids_model_decisiontree_tree", ".png", sep = "")
png(img_name_plot)
par(mfrow=c(1,1))
fancyRpartPlot(decisionTree)
ibrary(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrew
decisionTree = rpart(Hazardous ~ ., data=asteroids_split$train, method="class") #. all var
img_name_plot <- paste("IMG_asteroids_model_decisiontree_tree", ".png", sep = "")
library(RColorBrewer)
decisionTree = rpart(Hazardous ~ ., data=asteroids_split$train, method="class") #. all var
img_name_plot <- paste("IMG_asteroids_model_decisiontree_tree", ".png", sep = "")
png(img_name_plot)
par(mfrow=c(1,1))
fancyRpartPlot(decisionTree)
fancyRpartPlot(decisionTree)
fancyRpartPlot(decisionTree)
decisionTree = rpart(Hazardous ~ ., data=asteroids_split$train, method="class") #. all var
img_name_plot <- paste("IMG_asteroids_model_decisiontree_tree", ".png", sep = "")
png(img_name_plot)
fancyRpartPlot
fancyRpartPlot(decisionTree)
fancyRpartPlot(decisionTree)
decisionTree = rpart(Hazardous ~ Absolute.Magnitude+Est.Dia.in.KM.min. +Est.Dia.in.KM.max. +Est.Dia.in.M.min.+Est.Dia.in.M.max.+Est.Dia.in.Miles.min. +Est.Dia.in.Miles.max.+Est.Dia.in.Feet.min. +Relative.Velocity.km.per.sec+Epoch.Date.Close.Approach+Relative.Velocity.km.per.hr+Miles.per.hour+Miss.Dist..Astronomical.+Miss.Dist..lunar.+Miss.Dist..kilometers.+Miss.Dist..miles.+Orbit.Uncertainity+Minimum.Orbit.Intersection+Jupiter.Tisserand.Invariant +Epoch.Osculation+Eccentricity+Semi.Major.Axis+Inclination +Asc.Node.Longitude+Orbital.Period +Perihelion.Distance+Perihelion.Arg +Aphelion.Dist+Perihelion.Time+Mean.Anomaly+Mean.Motion,
data=asteroids_split$train, method="class") #. all var
fancyRpartPlot(decisionTree)
decisionTree = rpart(Hazardous ~ Absolute.Magnitude+Est.Dia.in.KM.min.,
data=asteroids_split$train, method="class") #. all var
fancyRpartPlot(decisionTree)
decisionTree = rpart(Hazardous ~ Absolute.Magnitude+Est.Dia.in.KM.min. +Est.Dia.in.KM.max. +Est.Dia.in.M.min.+Est.Dia.in.M.max.+Est.Dia.in.Miles.min. +Est.Dia.in.Miles.max.+Est.Dia.in.Feet.min. +Relative.Velocity.km.per.sec+Epoch.Date.Close.Approach+Relative.Velocity.km.per.hr+Miles.per.hour+Miss.Dist..Astronomical.+Miss.Dist..lunar.+Miss.Dist..kilometers.+Miss.Dist..miles.+Orbit.Uncertainity+Minimum.Orbit.Intersection+Jupiter.Tisserand.Invariant +Epoch.Osculation+Eccentricity+Semi.Major.Axis+Inclination +Asc.Node.Longitude+Orbital.Period +Perihelion.Distance+Perihelion.Arg,
data=asteroids_split$train, method="class") #. all var
fancyRpartPlot(decisionTree)
fancyRpartPlot(decisionTree)
setwd("~/Github/AsteroidsClassification")
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
#load dataset RObject as asteroids_split
load("DATA_asteroids_dataset_split_0.7.RData")
decisionTree = rpart(Hazardous ~ Absolute.Magnitude+Est.Dia.in.KM.min. +Est.Dia.in.KM.max. +Est.Dia.in.M.min.+Est.Dia.in.M.max.+Est.Dia.in.Miles.min. +Est.Dia.in.Miles.max.+Est.Dia.in.Feet.min. +Relative.Velocity.km.per.sec+Epoch.Date.Close.Approach+Relative.Velocity.km.per.hr+Miles.per.hour+Miss.Dist..Astronomical.+Miss.Dist..lunar.+Miss.Dist..kilometers.+Miss.Dist..miles.+Orbit.Uncertainity+Minimum.Orbit.Intersection+Jupiter.Tisserand.Invariant +Epoch.Osculation+Eccentricity+Semi.Major.Axis+Inclination +Asc.Node.Longitude+Orbital.Period +Perihelion.Distance+Perihelion.Arg,
data=asteroids_split$train, method="class") #. all var
decisionTree
fancyRpartPlot(decisionTree)
asteroids_split$test$pred <- predict(decisionTree, asteroids_split$test, type = "class")
confusion.matrix = table(asteroids_split$test$Hazardous, asteroids_split$test$pred)
sum(diag(confusion.matrix))/sum(confusion.matrix)
n, type = "class")
confusion.matrix = table(asteroids_split$train$Hazardous, asteroids_split$train$pred)
sum(diag(confusion.matrix))/sum(confusion.matrix)
steroids_split$train$pred <- predict(decisionTree, asteroids_split$train, type = "class")
confusion.matrix = table(asteroids_split$train$Hazardous, asteroids_split$train$pred)
sum(diag(confusion.matrix))/sum(confusion.matrix)
asteroids_split$train$pred <- predict(decisionTree, asteroids_split$train, type = "class")
confusion.matrix = table(asteroids_split$train$Hazardous, asteroids_split$train$pred)
sum(diag(confusion.matrix))/sum(confusion.matrix)
plotcp(decisionTree)
printcp(decisionTree)
decisionTree = rpart(Hazardous ~ Absolute.Magnitude+Est.Dia.in.KM.min. +Est.Dia.in.KM.max. +Est.Dia.in.M.min.+Est.Dia.in.M.max.+Est.Dia.in.Miles.min. +Est.Dia.in.Miles.max.+Est.Dia.in.Feet.min. +Relative.Velocity.km.per.sec+Epoch.Date.Close.Approach+Relative.Velocity.km.per.hr+Miles.per.hour+Miss.Dist..Astronomical.+Miss.Dist..lunar.+Miss.Dist..kilometers.+Miss.Dist..miles.+Orbit.Uncertainity+Minimum.Orbit.Intersection+Jupiter.Tisserand.Invariant +Epoch.Osculation+Eccentricity+Semi.Major.Axis+Inclination +Asc.Node.Longitude+Orbital.Period +Perihelion.Distance+Perihelion.Arg,
data=asteroids_split$train, method="class") #. all var
printcp(decisionTree)
plotcp(decisionTree)
prunedDecisionTree = prune(decisionTree, cp= .011)
fancyRpartPlot(prunedDecisionTree)
decisionTreeIG = rpart(Hazardous ~ Absolute.Magnitude+Est.Dia.in.KM.min. +Est.Dia.in.KM.max. +Est.Dia.in.M.min.+Est.Dia.in.M.max.+Est.Dia.in.Miles.min. +Est.Dia.in.Miles.max.+Est.Dia.in.Feet.min. +Relative.Velocity.km.per.sec+Epoch.Date.Close.Approach+Relative.Velocity.km.per.hr+Miles.per.hour+Miss.Dist..Astronomical.+Miss.Dist..lunar.+Miss.Dist..kilometers.+Miss.Dist..miles.+Orbit.Uncertainity+Minimum.Orbit.Intersection+Jupiter.Tisserand.Invariant +Epoch.Osculation+Eccentricity+Semi.Major.Axis+Inclination +Asc.Node.Longitude+Orbital.Period +Perihelion.Distance+Perihelion.Arg,
data=asteroids_split$train, method="class", #. all var
parms = list(split = 'information'))
setwd("~/Github/AsteroidsClassification")
#load data
asteroids_data = read.csv("DATASET/orbits.csv", header = TRUE)
View(asteroids_data)
asteroids_datatype <- sapply(asteroids_data, class)
asteroids_datatype
setwd("~/Github/AsteroidsClassification")
#load data
asteroids_data = read.csv("DATASET/orbits.csv", header = TRUE)
#datatype change chars -> fact or int -> boolean
cat_cols <- c("Epoch..TDB","Classification","Orbital.Reference")
log_cols <- c("Hazardous")
asteroids_data[cat_cols] <- lapply(asteroids_data[cat_cols], as.factor)
asteroids_data[log_cols] <- lapply(asteroids_data[log_cols], as.logical)
asteroids_data[double_cols] <- lapply(asteroids_data[double_cols], as.double)
asteroids_datatype <- sapply(asteroids_data, class)
#remove object useless
rm(cat_cols,log_cols,double_cols,asteroids_datatype)
double_cols <- c("Asteroid.Magnitude")
asteroids_data[double_cols] <- lapply(asteroids_data[double_cols], as.double)
asteroids_datatype <- sapply(asteroids_data, class)
#remove object useless
rm(cat_cols,log_cols,double_cols,asteroids_datatype)
setwd("~/Github/AsteroidsClassification")
#load data
asteroids_data = read.csv("DATASET/orbits.csv", header = TRUE)
#datatype change chars -> fact or int -> boolean
cat_cols <- c("Epoch..TDB","Classification","Orbital.Reference")
log_cols <- c("Hazardous")
double_cols <- c("Asteroid.Magnitude")
asteroids_data[cat_cols] <- lapply(asteroids_data[cat_cols], as.factor)
asteroids_data[log_cols] <- lapply(asteroids_data[log_cols], as.logical)
asteroids_data[double_cols] <- lapply(asteroids_data[double_cols], as.double)
asteroids_datatype <- sapply(asteroids_data, class)
#remove object useless
rm(cat_cols,log_cols,double_cols,asteroids_datatype)
save(asteroids_data, file="DATA_asteroids_dataset.RData")
rm(asteroids_data)
setwd("~/Github/AsteroidsClassification")
#load data
asteroids_data = read.csv("DATASET/orbits.csv", header = TRUE)
#datatype change chars -> fact or int -> boolean
cat_cols <- c("Epoch..TDB","Classification","Orbital.Reference")
log_cols <- c("Hazardous")
double_cols <- c("Asteroid.Magnitude")
asteroids_data[cat_cols] <- lapply(asteroids_data[cat_cols], as.factor)
asteroids_data[log_cols] <- lapply(asteroids_data[log_cols], as.logical)
asteroids_data[double_cols] <- lapply(asteroids_data[double_cols], as.double)
asteroids_datatype <- sapply(asteroids_data, class)
#remove object useless
rm(cat_cols,log_cols,double_cols,asteroids_datatype)
save(asteroids_data, file="DATA_asteroids_dataset.RData")
rm(asteroids_data)
asteroids_data[double_cols] <- lapply(asteroids_data[double_cols], as.numeric )
setwd("~/Github/AsteroidsClassification")
#load data
asteroids_data = read.csv("DATASET/orbits.csv", header = TRUE)
#datatype change chars -> fact or int -> boolean
cat_cols <- c("Epoch..TDB","Classification","Orbital.Reference")
log_cols <- c("Hazardous")
double_cols <- c("Asteroid.Magnitude")
asteroids_data[cat_cols] <- lapply(asteroids_data[cat_cols], as.factor)
asteroids_data[log_cols] <- lapply(asteroids_data[log_cols], as.logical)
asteroids_data[double_cols] <- lapply(asteroids_data[double_cols], as.numeric )
asteroids_datatype <- sapply(asteroids_data, class)
#remove object useless
rm(cat_cols,log_cols,double_cols,asteroids_datatype)
save(asteroids_data, file="DATA_asteroids_dataset.RData")
rm(asteroids_data)
setwd("~/Github/AsteroidsClassification")
#load data
asteroids_data = read.csv("DATASET/orbits.csv", header = TRUE)
#datatype change chars -> fact or int -> boolean
cat_cols <- c("Epoch..TDB","Classification","Orbital.Reference")
log_cols <- c("Hazardous")
double_cols <- c("Asteroid.Magnitude")
asteroids_data[cat_cols] <- lapply(asteroids_data[cat_cols], as.factor)
asteroids_data[log_cols] <- lapply(asteroids_data[log_cols], as.logical)
asteroids_data[double_cols] <- lapply(asteroids_data[double_cols], as.numeric )
asteroids_datatype <- sapply(asteroids_data, class)
#remove object useless
rm(cat_cols,log_cols,double_cols,asteroids_datatype)
save(asteroids_data, file="DATA_asteroids_dataset.RData")
rm(asteroids_data)
setwd("~/Github/AsteroidsClassification")
#load data
asteroids_data = read.csv("DATASET/orbits.csv", header = TRUE)
#datatype change chars -> fact or int -> boolean
cat_cols <- c("Epoch..TDB","Classification","Orbital.Reference")
log_cols <- c("Hazardous")
double_cols <- c("Asteroid.Magnitude")
asteroids_data[cat_cols] <- lapply(asteroids_data[cat_cols], as.factor)
asteroids_data[log_cols] <- lapply(asteroids_data[log_cols], as.logical)
asteroids_data[double_cols] <- lapply(asteroids_data[double_cols], as.numeric )
asteroids_datatype <- sapply(asteroids_data, class)
#remove object useless
rm(cat_cols,log_cols,double_cols,asteroids_datatype)
save(asteroids_data, file="DATA_asteroids_dataset.RData")
rm(asteroids_data)
l
asteroids_data = read.csv("DATASET/orbits.csv", header = TRUE)
#datatype change chars -> fact or int -> boolean
cat_cols <- c("Epoch..TDB","Classification","Orbital.Reference")
log_cols <- c("Hazardous")
double_cols <- c("Asteroid.Magnitude")
asteroids_data[cat_cols] <- lapply(asteroids_data[cat_cols], as.factor)
#datatype change chars -> fact or int -> boolean
cat_cols <- c("Epoch..TDB.","Classification","Orbital.Reference")
log_cols <- c("Hazardous")
double_cols <- c("Asteroid.Magnitude")
asteroids_data[cat_cols] <- lapply(asteroids_data[cat_cols], as.factor)
asteroids_data[log_cols] <- lapply(asteroids_data[log_cols], as.logical)
asteroids_data[double_cols] <- lapply(asteroids_data[double_cols], as.numeric )
asteroids_datatype <- sapply(asteroids_data, class)
#remove object useless
rm(cat_cols,log_cols,double_cols,asteroids_datatype)
save(asteroids_data, file="DATA_asteroids_dataset.RData")
rm(asteroids_data)
t
#load dataset RObject as asteroids_data
load("DATA_asteroids_dataset.RData")
split.data = function(data, p = 0.7, s = 1){
set.seed(s)
index = sample(1:dim(data)[1])
train = data[index[1:floor(dim(data)[1] * p)], ]
test = data[index[((ceiling(dim(data)[1] * p)) + 1):dim(data)[1]], ]
return(list(train=train, test=test))
}
split_perc <- 0.7
asteroids_split <- split.data(asteroids_data, p = split_perc)
img_name_plot <- paste("IMG_asteroids_dataset_splited_", as.character(split_perc), ".png", sep = "")
png(img_name_plot)
par(mfrow=c(1,2))
pie(table(asteroids_split$train$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$train$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Train set - Hazardous class"
)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
dev.off()
name_file <- paste("DATA_asteroids_dataset_split_", as.character(split_perc), ".RData", sep = "")
rm(asteroids_data,split.data,split_perc,img_name_plot)
save(asteroids_split, file=name_file)
rm(asteroids_split,name_file)
ication")
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
#load dataset RObject as asteroids_split
load("DATA_asteroids_dataset_split_0.7.RData")
decisionTree = rpart(Hazardous ~ Absolute.MagnitudeOrbit.Axis..AU. + Orbit.Eccentricity + Orbit.Inclination..deg. + Perihelion.Argument..deg. + Node.Longitude..deg. + Mean.Anomoly..deg. + Perihelion.Distance..AU. + Aphelion.Distance..AU. + Orbital.Period..yr. + Minimum.Orbit.Intersection.Distance..AU. + Asteroid.Magnitude,
data=asteroids_split$train, method="class") #. all var
setwd("~/Github/AsteroidsClassification")
#load dataset RObject as asteroids_data
load("DATA_asteroids_dataset.RData")
split.data = function(data, p = 0.7, s = 1){
set.seed(s)
index = sample(1:dim(data)[1])
train = data[index[1:floor(dim(data)[1] * p)], ]
test = data[index[((ceiling(dim(data)[1] * p)) + 1):dim(data)[1]], ]
return(list(train=train, test=test))
}
split_perc <- 0.7
asteroids_split <- split.data(asteroids_data, p = split_perc)
img_name_plot <- paste("IMG_asteroids_dataset_splited_", as.character(split_perc), ".png", sep = "")
png(img_name_plot)
par(mfrow=c(1,2))
pie(table(asteroids_split$train$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$train$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Train set - Hazardous class"
)
pie(table(asteroids_split$test$Hazardous),
labels = paste(round(prop.table(table(asteroids_split$test$Hazardous))*100), "%", sep = ""),
col = heat.colors(5), main = "Test set - Hazardous class"
)
dev.off()
name_file <- paste("DATA_asteroids_dataset_split_", as.character(split_perc), ".RData", sep = "")
rm(asteroids_data,split.data,split_perc,img_name_plot)
save(asteroids_split, file=name_file)
rm(asteroids_split,name_file)
setwd("~/Github/AsteroidsClassification")
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
#load dataset RObject as asteroids_split
load("DATA_asteroids_dataset_split_0.7.RData")
decisionTree = rpart(Hazardous ~ Absolute.MagnitudeOrbit.Axis..AU. + Orbit.Eccentricity + Orbit.Inclination..deg. + Perihelion.Argument..deg. + Node.Longitude..deg. + Mean.Anomoly..deg. + Perihelion.Distance..AU. + Aphelion.Distance..AU. + Orbital.Period..yr. + Minimum.Orbit.Intersection.Distance..AU. + Asteroid.Magnitude,
data=asteroids_split$train, method="class") #. all var
decisionTree = rpart(Hazardous ~ Absolute.Magnitude + Orbit.Axis..AU. + Orbit.Eccentricity + Orbit.Inclination..deg. + Perihelion.Argument..deg. + Node.Longitude..deg. + Mean.Anomoly..deg. + Perihelion.Distance..AU. + Aphelion.Distance..AU. + Orbital.Period..yr. + Minimum.Orbit.Intersection.Distance..AU. + Asteroid.Magnitude,
data=asteroids_split$train, method="class") #. all var
decisionTree = rpart(Hazardous ~ Orbit.Axis..AU. + Orbit.Eccentricity + Orbit.Inclination..deg. + Perihelion.Argument..deg. + Node.Longitude..deg. + Mean.Anomoly..deg. + Perihelion.Distance..AU. + Aphelion.Distance..AU. + Orbital.Period..yr. + Minimum.Orbit.Intersection.Distance..AU. + Asteroid.Magnitude,
data=asteroids_split$train, method="class") #. all var
printcp(decisionTree)
plotcp(decisionTree)
decimg_name_plot <- paste("IMG_asteroids_model_decisiontree_tree", ".png", sep = "")
png(img_name_plot)
fancyRpartPlot(decisionTree)
asteroids_split$test$pred <- predict(decisionTree, asteroids_split$test, type = "class")
confusion.matrix = table(asteroids_split$test$Hazardous, asteroids_split$test$pred)
sum(diag(confusion.matrix))/sum(confusion.matrix)
